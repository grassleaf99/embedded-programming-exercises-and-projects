CCS PCM C Compiler, Version 5.025, 9105               16-May-19 19:41

               Filename:   C:\Users\ADMIN\Desktop\Hoc_PIC\dk_led_7_thanh\main.lst

               ROM used:   93 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           18 (5%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01A
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
0004:  MOVLW  2D
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  BCF    0A.3
0018:  BCF    0A.4
0019:  GOTO   056 (RETURN)
....................  
....................  
....................  
.................... void main() 
001A:  MOVF   03,W
001B:  ANDLW  1F
001C:  MOVWF  03
001D:  BSF    03.5
001E:  BSF    1F.0
001F:  BSF    1F.1
0020:  BSF    1F.2
0021:  BCF    1F.3
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
.................... {  //kit PIC cua linh kien duc long co 4 den led 7 doan (anot chung -> voi viec xuat thi 0 la sang, 1 la toi) gan vao cac chan A0, A1, E0, E2 
....................    //code nay thao tac voi led 7 doan có chan nguon dc gan vao chan E2 va cac led cua led 7 doan này gan vao 7 chan cong D 
....................    set_tris_e(0xFB);// 1111 1011  cong E: chan E2 lam output 
0025:  BSF    09.0
0026:  BSF    09.1
0027:  BCF    09.2
....................    set_tris_d(0x00);// tat ca chan cong D lam output hien thi do sang den led voi 
0028:  MOVLW  00
0029:  MOVWF  08
....................                     // a la D0, b la D1, c la D2, d la D3, e la D4, f la D5, g la D6, dp la D7 
....................    while(TRUE) 
....................    { 
....................       output_low(PIN_E2); // cho chan E2 muc 0 -> cap nguon cho led 7 doan chung anot 
002A:  BCF    09.2
002B:  BCF    03.5
002C:  BCF    09.2
....................    // output_d(0xF9);     // xuat so 1 ra led 7 doan dc noi voi chan E2 vì 0xF9 = 1111 1001 
....................    //                                                                                   || 
....................    //                                                                                   vv 
....................    //                                                                                   cb 
....................       int8 maled7[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90}; 
002D:  MOVLW  C0
002E:  MOVWF  21
002F:  MOVLW  F9
0030:  MOVWF  22
0031:  MOVLW  A4
0032:  MOVWF  23
0033:  MOVLW  B0
0034:  MOVWF  24
0035:  MOVLW  99
0036:  MOVWF  25
0037:  MOVLW  92
0038:  MOVWF  26
0039:  MOVLW  82
003A:  MOVWF  27
003B:  MOVLW  F8
003C:  MOVWF  28
003D:  MOVLW  80
003E:  MOVWF  29
003F:  MOVLW  90
0040:  MOVWF  2A
....................                      // so 0, so 1, so 2, so 3, so 4, so 5, so 6, so 7, so 8, so 9 
....................       for(int i = 0; i < 10; i++) 
0041:  CLRF   2B
0042:  MOVF   2B,W
0043:  SUBLW  09
0044:  BTFSS  03.0
0045:  GOTO   05A
....................       { 
....................          output_d(maled7[i]); 
0046:  MOVLW  21
0047:  ADDWF  2B,W
0048:  MOVWF  04
0049:  BCF    03.7
004A:  MOVF   00,W
004B:  MOVWF  2C
004C:  BSF    03.5
004D:  CLRF   08
004E:  BCF    03.5
004F:  MOVF   2C,W
0050:  MOVWF  08
....................          delay_ms(1000); 
0051:  MOVLW  04
0052:  MOVWF  2C
0053:  MOVLW  FA
0054:  MOVWF  2D
0055:  GOTO   004
0056:  DECFSZ 2C,F
0057:  GOTO   053
0058:  INCF   2B,F
0059:  GOTO   042
....................       } 
005A:  BSF    03.5
005B:  GOTO   02A
....................       //TODO: User Code 
....................       //code khi nap va chay tren kit thi se hien thi den led 7 doan chan A1 va E2  
....................       //(co li do gi do khien cho led 7 doan chan A1 sang ma a Tuyen ko noi ro) 
....................    } 
....................  
.................... } 
005C:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
