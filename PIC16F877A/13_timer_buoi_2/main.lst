CCS PCM C Compiler, Version 5.025, 9105               01-Jul-19 15:14

               Filename:   C:\Users\ADMIN\Desktop\Hoc_PIC\13_timer_buoi_2\main.lst

               ROM used:   106 words (1%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
.................... long count = 0; 
.................... void main() 
*
004C:  MOVF   03,W
004D:  ANDLW  1F
004E:  MOVWF  03
004F:  CLRF   28
0050:  CLRF   27
0051:  BSF    03.5
0052:  BSF    1F.0
0053:  BSF    1F.1
0054:  BSF    1F.2
0055:  BCF    1F.3
0056:  MOVLW  07
0057:  MOVWF  1C
0058:  BCF    03.7
.................... { 
....................    set_tris_d(0x80); 
0059:  MOVLW  80
005A:  MOVWF  08
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_8);    // chon clock noi = 20M/4 = 5MHz va che do chia cho 8 -> moi lan tang 1 bit se co tan so 5000kHz/8 = 8/5000 (ms) 
005B:  MOVLW  B5
005C:  BCF    03.5
005D:  MOVWF  10
....................    set_timer1(64911);                           // cai dat dem tu 64911 -> 65536 (2 mu 16) --> thoi gian xay ra tran timer1 (su kien ngat) la: (65536 - 64911) * (8/5000) = 1 ms   
005E:  CLRF   0E
005F:  MOVLW  FD
0060:  MOVWF  0F
0061:  MOVLW  8F
0062:  MOVWF  0E
....................    enable_interrupts(INT_TIMER1);               // kich hoat ngat timer 1 
0063:  BSF    03.5
0064:  BSF    0C.0
....................    enable_interrupts(GLOBAL);                   // kich hoat ngat toan cuc 
0065:  MOVLW  C0
0066:  BCF    03.5
0067:  IORWF  0B,F
....................    while(TRUE) 
....................    { 
0068:  GOTO   068
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
....................  
.................... #INT_TIMER1 
.................... void chuyenled() 
0069:  SLEEP
.................... { 
....................      set_timer1(64911);                         // cai dat dem tu 64911 de xay ra tran sau 1 ms 
*
0031:  CLRF   0E
0032:  MOVLW  FD
0033:  MOVWF  0F
0034:  MOVLW  8F
0035:  MOVWF  0E
....................      count++; 
0036:  INCF   27,F
0037:  BTFSC  03.2
0038:  INCF   28,F
....................      if(count == 1000) 
0039:  MOVF   27,W
003A:  SUBLW  E8
003B:  BTFSS  03.2
003C:  GOTO   048
003D:  MOVF   28,W
003E:  SUBLW  03
003F:  BTFSS  03.2
0040:  GOTO   048
....................      { 
....................          count = 0; 
0041:  CLRF   28
0042:  CLRF   27
....................          output_toggle(PIN_D7); 
0043:  BSF    03.5
0044:  BCF    08.7
0045:  MOVLW  80
0046:  BCF    03.5
0047:  XORWF  08,F
....................      } 
0048:  BCF    0C.0
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   01D
.................... } 

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
